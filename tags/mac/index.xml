<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Mac on Fython&#39;s Blog</title>
    <link>https://blog.fangjiahui.me/tags/mac/</link>
    <description>Recent content in Mac on Fython&#39;s Blog</description>
    <image>
      <title>Fython&#39;s Blog</title>
      <url>https://blog.fangjiahui.me/blog-cover-1.png</url>
      <link>https://blog.fangjiahui.me/blog-cover-1.png</link>
    </image>
    <generator>Hugo -- 0.140.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 28 Sep 2025 10:22:36 +0800</lastBuildDate>
    <atom:link href="https://blog.fangjiahui.me/tags/mac/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mac Launchd 介绍和使用</title>
      <link>https://blog.fangjiahui.me/posts/2021-04-19-mac-launchd-daemons-and-agents-tutorial/</link>
      <pubDate>Mon, 19 Apr 2021 03:25:09 +0800</pubDate>
      <guid>https://blog.fangjiahui.me/posts/2021-04-19-mac-launchd-daemons-and-agents-tutorial/</guid>
      <description>&lt;h2 id=&#34;mac-launchd-介绍和使用&#34;&gt;Mac Launchd 介绍和使用&lt;/h2&gt;
&lt;p&gt;Linux 上如果想开机开机启动一个服务或者定时运行一个服务有很多的选择比如之前介绍过的&lt;a href=&#34;../2018-08-16-systemd-timer-unit/&#34;&gt;Systemd&lt;/a&gt;或者用 crontab 也可以，而在 Mac 不同它有一个类似的叫 Launchd 的系统，对应使用&lt;code&gt;launchctl&lt;/code&gt;命令控制&lt;/p&gt;
&lt;h3 id=&#34;daemons-and-agents&#34;&gt;Daemons and Agents&lt;/h3&gt;
&lt;p&gt;Launchd 管理 Daemons 和 Agents 两种类型分别存放在不同的文件夹下，主要的区别是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Agents 是用户登录后执行的&lt;/li&gt;
&lt;li&gt;Daemons 是开机后就执行，可以通过&lt;code&gt;UserName&lt;/code&gt;指定用户比如&lt;code&gt;root&lt;/code&gt;用户&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;配置文件&#34;&gt;配置文件&lt;/h3&gt;
&lt;p&gt;Launchd 配置文件以&lt;code&gt;.plist&lt;/code&gt;结尾，本质上是&lt;code&gt;xml&lt;/code&gt;格式的文件，Daemons 和 Agents 各存放的路径也不同&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;路径&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;User Agents&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;~/Library/LaunchAgents&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;用户 Agents 当前用户登录时运行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Global Agents&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/Library/LaunchAgents&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;全局 Agents 任何用户登录时都会运行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;System Agents&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/System/Library/LaunchAgents&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;系统 Agents 任何用户登录时都会运行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Global Daemons&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/Library/LaunchDaemons&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;全局 Daemons 内核初始化加载完后就运行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;System Daemons&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/System/Library/LaunchDaemons&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;系统 Daemons 内核初始化加载完后就运行&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;系统运行开机首先会加载内核启动&lt;code&gt;kernel_tas(0)&lt;/code&gt;，然后启动&lt;code&gt;launchd(1)&lt;/code&gt;好后去启动指定好的 Daemons 最后用户登录再运行相应的 Agents 任务&lt;/p&gt;
&lt;p&gt;一般文件名都以&lt;code&gt;com.domain.programName.plist&lt;/code&gt;格式命名，不管是 Daemons 还是 Agents 格式都是一样的，只是存放位置不同。看下面一个 hello world 的例子 &lt;code&gt;~/Library/LaunchAgents/com.example.hello.plist&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mac不安装第三方应用读写NTFS格式硬盘</title>
      <link>https://blog.fangjiahui.me/posts/2019-01-25-mac-mount-ntfs/</link>
      <pubDate>Fri, 25 Jan 2019 08:59:14 +0800</pubDate>
      <guid>https://blog.fangjiahui.me/posts/2019-01-25-mac-mount-ntfs/</guid>
      <description>&lt;h1 id=&#34;mac不安装第三方应用读写ntfs格式硬盘&#34;&gt;Mac不安装第三方应用读写NTFS格式硬盘&lt;/h1&gt;
&lt;p&gt;首先插入硬盘或者U盘，现在的盘只能读取，我们先&lt;code&gt;umount&lt;/code&gt;以&lt;code&gt;/dev/disk3s2&lt;/code&gt;分区为例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;❯ mount                           &lt;span class=&#34;c1&#34;&gt;# 列出挂载分区&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/dev/disk1s5 on / &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;apfs, local, read-only, journaled&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;devfs on /dev &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;devfs, local, nobrowse&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/dev/disk1s1 on /System/Volumes/Data &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;apfs, local, journaled, nobrowse&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/dev/disk1s4 on /private/var/vm &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;apfs, local, journaled, nobrowse&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/dev/disk3s2 on /Volumes/TOSHIBA EXT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ntfs, local, nodev, nosuid, read-only, noowners&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;❯ sudo umount /Volumes/TOSHIBA&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;EXT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建挂在路径，然后手动挂载&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mkdir /Volumes/mount
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mount -t ntfs -o rw,auto,nobrowse /dev/disk3s2 /Volumes/mount
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /Volumes/mount
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就这样移动硬盘可读写了，也可以打开Finder试试&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mac终端(Terminal)配置</title>
      <link>https://blog.fangjiahui.me/posts/2018-07-23-mac-config-terminal/</link>
      <pubDate>Mon, 23 Jul 2018 12:50:27 +0800</pubDate>
      <guid>https://blog.fangjiahui.me/posts/2018-07-23-mac-config-terminal/</guid>
      <description>&lt;h2 id=&#34;mac-终端terminal配置&#34;&gt;Mac 终端(Terminal)配置&lt;/h2&gt;
&lt;p&gt;平时工作中命令行用的比图形界面多，所以有必要配置一个赏心悦目的终端界面来提高工作效率(^_^)。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;../images/MacScreenShot-2018-07-20-5-35-35.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;iterm&#34;&gt;iTerm&lt;/h3&gt;
&lt;p&gt;第一步就是替换原来的自带终端(Terminal)，换成&lt;a href=&#34;https://www.iterm2.com/&#34;&gt;iTerm&lt;/a&gt;。iTerm 是一个深受广大开发者欢迎的终端 App，代码托管在&lt;a href=&#34;https://github.com/gnachman/iTerm2&#34;&gt;Github&lt;/a&gt;，可以直接在官网下载安装。最新版为 &lt;code&gt;Build 3.4.23&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开&lt;em&gt;iTerm2 &amp;gt; Preferences &amp;gt; General&lt;/em&gt;，在&lt;code&gt;Selection&lt;/code&gt;下勾上&lt;code&gt;Applications in terminal may access clipboard&lt;/code&gt;使在&lt;code&gt;iTerm&lt;/code&gt;中鼠标选中就能复制到系统剪切板使用&lt;code&gt;command+v&lt;/code&gt;粘贴&lt;/p&gt;
&lt;p&gt;打开&lt;em&gt;iTerm2 &amp;gt; Preferences &amp;gt; Profiles&lt;/em&gt;，右边点&lt;code&gt;Keys&lt;/code&gt;把左右 option 键设为&lt;code&gt;Esc+&lt;/code&gt;，取消勾选&lt;code&gt;Apps can change this&lt;/code&gt;来启用 Unix 的&lt;code&gt;Alt + B&lt;/code&gt;和&lt;code&gt;Alt + F&lt;/code&gt;前进和后退一个单词。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;../images/ScreenShot-2018-07-20-09-34-18.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开&lt;em&gt;iTerm2 &amp;gt; Preferences &amp;gt; Terminal&lt;/em&gt;，底部 &lt;code&gt;Shell Integration&lt;/code&gt; 取消勾选 &lt;code&gt;Show mark indicators&lt;/code&gt; 不然每次执行命令会出现一个小箭头影响美观&lt;/p&gt;
&lt;h3 id=&#34;zsh--oh-my-zsh&#34;&gt;Zsh &amp;amp; Oh My Zsh&lt;/h3&gt;
&lt;p&gt;打开 iTerm 安装&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/bin/bash -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 Homebrew 安装 zsh，设为默认的终端。从 Big Sur 已经设置 zsh 为默认的终端了，可以跳过此步骤，可以使用&lt;code&gt;echo $SHELL&lt;/code&gt;检查&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
